"""
Question: Remove Palindromic Subsequences
Given a string s consisting only of letters 'a' and 'b'. In a single step you can remove one palindromic subsequence from s.
Return the minimum number of steps to make the given string empty.
A string is a subsequence of a given string, if it is generated by deleting some characters of a given string without changing its order.
A string is called palindrome if is one that reads the same backward as well as forward.
"""
class Solution:
    def removePalindromeSub(self, s: str) -> int:
        if s == "":
            return 0
        hash = set(w for w in s)
        if len(hash) == 1:
            return 1
        forward = []
        backward = []
        for i in s:
            forward.append(i)
            backward.insert(0, i)
        if forward == backward:
            return 1
        else:
            return 2